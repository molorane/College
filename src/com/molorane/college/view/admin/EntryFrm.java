/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.molorane.college.view.admin;

import com.molorane.college.bll.impl.CourseBoImpl;
import com.molorane.college.bll.impl.EntryBoImpl;
import com.molorane.college.custom.Functions;
import com.molorane.college.bll.impl.MatricBoImpl;
import com.molorane.college.bll.impl.TermBoImpl;
import com.molorane.college.custom.LoginSession;
import com.molorane.college.model.Term;
import com.molorane.college.model.User;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.StringTokenizer;

/**
 *
 * @author Mothusi Molorane
 */
public class EntryFrm extends javax.swing.JFrame {
    
    private final MatricBoImpl matricBoImpl = new MatricBoImpl();
    private final CourseBoImpl courseBoImpl = new CourseBoImpl();
    private final TermBoImpl termBoImpl = new TermBoImpl();
    private final EntryBoImpl entryBoImpl = new EntryBoImpl();
    
    // variables    
    private String selectedDepartment;
    private Term selectedTerm;
    
    private final User loggedInUser;
    
    private boolean jcbDepartmentFilled = false;
    private boolean jcbTermFilled = false;
    
    private final String pathToDesktop;
    
    private List<HashMap<String,Object>> uploadMarks = new ArrayList<>();

    /**
     * Creates new form TXTFrm
     */
    public EntryFrm() {
        super("Entry Forms - "+Functions.appName());
        initComponents();
     
        loggedInUser = LoginSession.GetSessionUser();
        title.setUser(loggedInUser);
        title.setCurrFrm(EntryFrm.this);
        
        courseBoImpl.fillComboBoxDepartment(jcbDepartment);
        jcbDepartmentFilled = true;
        jpnProgress.setVisible(false);
        
        pathToDesktop = Functions.getDesktopPath();
        Functions.initForm(EntryFrm.this);
    }
    
    void btnExamEntryPressed(){
        Functions.setColor(btnExamEntry);
        Functions.resetColor(btnMarkEntry);
    }
    
    void btnMarkEntryPressed(){
       Functions.resetColor(btnExamEntry);
       Functions.setColor(btnMarkEntry);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnSideMenu = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnMarkEntry = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnExamEntry = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        title = new com.molorane.college.view.Controls.TitlePnl();
        alert = new com.molorane.college.view.Controls.Alert();
        jpnControls = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jcbDepartment = new javax.swing.JComboBox<>();
        jLabel60 = new javax.swing.JLabel();
        jcbTerm = new javax.swing.JComboBox<>();
        jpnProgress = new javax.swing.JPanel();
        lblProgress = new javax.swing.JLabel();
        jpnSlider = new com.molorane.college.custom.JPanelSliding();
        jpnMarkEntry = new javax.swing.JPanel();
        btnGenerateMarkEntry = new javax.swing.JButton();
        jpnExamEntry = new javax.swing.JPanel();
        btnGenerateExamEntry = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpnSideMenu.setBackground(Functions.pnlBackgroundSideMenu());

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("ENTRY FORMS");

        btnMarkEntry.setBackground(new java.awt.Color(64, 43, 100));
        btnMarkEntry.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMarkEntry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMarkEntryMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/molorane/college/images/32x32/billboard.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("MARK ENTRY");

        javax.swing.GroupLayout btnMarkEntryLayout = new javax.swing.GroupLayout(btnMarkEntry);
        btnMarkEntry.setLayout(btnMarkEntryLayout);
        btnMarkEntryLayout.setHorizontalGroup(
            btnMarkEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnMarkEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnMarkEntryLayout.setVerticalGroup(
            btnMarkEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnMarkEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnMarkEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnExamEntry.setBackground(Functions.pnlBackgroundTop());
        btnExamEntry.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExamEntry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExamEntryMouseClicked(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/molorane/college/images/32x32/tests.png"))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("EXAM ENTRY");

        javax.swing.GroupLayout btnExamEntryLayout = new javax.swing.GroupLayout(btnExamEntry);
        btnExamEntry.setLayout(btnExamEntryLayout);
        btnExamEntryLayout.setHorizontalGroup(
            btnExamEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExamEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnExamEntryLayout.setVerticalGroup(
            btnExamEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExamEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnExamEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jpnSideMenuLayout = new javax.swing.GroupLayout(jpnSideMenu);
        jpnSideMenu.setLayout(jpnSideMenuLayout);
        jpnSideMenuLayout.setHorizontalGroup(
            jpnSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnExamEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnMarkEntry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpnSideMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnSideMenuLayout.setVerticalGroup(
            jpnSideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnSideMenuLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMarkEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExamEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpnControls.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Department:");

        jcbDepartment.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcbDepartment.setForeground(new java.awt.Color(51, 51, 51));
        jcbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDepartmentActionPerformed(evt);
            }
        });

        jLabel60.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(51, 51, 51));
        jLabel60.setText("Term:");

        jcbTerm.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jcbTerm.setForeground(new java.awt.Color(51, 51, 51));
        jcbTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTermActionPerformed(evt);
            }
        });

        jpnProgress.setLayout(new java.awt.CardLayout());

        lblProgress.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblProgress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblProgress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/molorane/college/images/loaderIcon.gif"))); // NOI18N
        lblProgress.setText("Exporting please wait..");
        jpnProgress.add(lblProgress, "card2");

        javax.swing.GroupLayout jpnControlsLayout = new javax.swing.GroupLayout(jpnControls);
        jpnControls.setLayout(jpnControlsLayout);
        jpnControlsLayout.setHorizontalGroup(
            jpnControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );
        jpnControlsLayout.setVerticalGroup(
            jpnControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpnProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel60)
                        .addComponent(jcbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnGenerateMarkEntry.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnGenerateMarkEntry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/molorane/college/images/32x32/surveys.png"))); // NOI18N
        btnGenerateMarkEntry.setText("Mark Entry");
        btnGenerateMarkEntry.setToolTipText("Generate mark entry");
        btnGenerateMarkEntry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerateMarkEntry.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerateMarkEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateMarkEntryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnMarkEntryLayout = new javax.swing.GroupLayout(jpnMarkEntry);
        jpnMarkEntry.setLayout(jpnMarkEntryLayout);
        jpnMarkEntryLayout.setHorizontalGroup(
            jpnMarkEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMarkEntryLayout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(btnGenerateMarkEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        jpnMarkEntryLayout.setVerticalGroup(
            jpnMarkEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMarkEntryLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(btnGenerateMarkEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        jpnSlider.add(jpnMarkEntry, "card3");

        btnGenerateExamEntry.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnGenerateExamEntry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/molorane/college/images/32x32/tests.png"))); // NOI18N
        btnGenerateExamEntry.setText("Exam Entry");
        btnGenerateExamEntry.setToolTipText("Generate exam entry");
        btnGenerateExamEntry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGenerateExamEntry.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerateExamEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateExamEntryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnExamEntryLayout = new javax.swing.GroupLayout(jpnExamEntry);
        jpnExamEntry.setLayout(jpnExamEntryLayout);
        jpnExamEntryLayout.setHorizontalGroup(
            jpnExamEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnExamEntryLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(btnGenerateExamEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(330, Short.MAX_VALUE))
        );
        jpnExamEntryLayout.setVerticalGroup(
            jpnExamEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnExamEntryLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(btnGenerateExamEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jpnSlider.add(jpnExamEntry, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpnSideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jpnSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpnControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jpnControls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addComponent(jpnSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jpnSideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMarkEntryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMarkEntryMouseClicked
        // TODO add your handling code here:
        btnMarkEntryPressed();
        jpnSlider.nextPanel(10, jpnMarkEntry, jpnSlider.right);
    }//GEN-LAST:event_btnMarkEntryMouseClicked

    private void btnExamEntryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExamEntryMouseClicked
        // TODO add your handling code here:
        btnExamEntryPressed();        
        jpnSlider.nextPanel(10, jpnExamEntry, jpnSlider.right);
    }//GEN-LAST:event_btnExamEntryMouseClicked

    private void jcbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDepartmentActionPerformed
        // TODO add your handling code here:
        if(jcbDepartmentFilled){
            String department = jcbDepartment.getSelectedItem().toString();
            jcbTermFilled = false;
            termBoImpl.fillComboBoxByDepartment(jcbTerm, Functions.getDeptFromDepartment(department));
            jcbTermFilled = true;
        }
    }//GEN-LAST:event_jcbDepartmentActionPerformed

    private void jcbTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTermActionPerformed
        // TODO add your handling code here:
        if(jcbTermFilled){
            selectedDepartment = jcbDepartment.getSelectedItem().toString();
            Object objGrade = (Object)jcbTerm.getSelectedItem();
            selectedTerm = (Term)objGrade;
        }
    }//GEN-LAST:event_jcbTermActionPerformed

    private void btnGenerateMarkEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateMarkEntryActionPerformed
        // TODO add your handling code here: 
        if(selectedTerm != null && selectedDepartment != null){
            try{
                selectedDepartment = jcbDepartment.getSelectedItem().toString();
                Object objGrade = (Object)jcbTerm.getSelectedItem();
                selectedTerm = (Term)objGrade;

                String centreNo = Functions.getCentreNo();
                String centreName = Functions.getCentreName();
                String [] value = selectedTerm.getTerm().split("-");
                String examDate = value[0]+value[1];
                String fileName = centreNo.substring(6);
                String provinceNo = "08";

                DateFormat df = new SimpleDateFormat("yyyyMMdd");
                Date date = new Date();
                String dateCreated = df.format(date);

                String d = selectedDepartment.equalsIgnoreCase("Management")?
                            "H":"T";
                String heading = centreNo.substring(6) + d + "29M.TXT";
                Functions.clearFile(heading);     
                String myStrH = "1" + heading + appendWith(centreName,26," ") + centreNo + provinceNo + dateCreated + examDate + "0204";
                Functions.writeLine(myStrH, heading);

                List<HashMap<String,Object>> list = entryBoImpl.GetMarkEntry(selectedTerm.getTermId(), 1);
                int count = list.size();

                list.forEach((row) -> {
                    String stuId = row.get("idno").toString();
                    String stuNo = row.get("personId").toString();
                    String courseCode = row.get("courseCode").toString();
                    String moduleCode = row.get("moduleCode").toString();
                    String mark = row.get("marks").toString();

                    for(int i=mark.length();i<4;i++){
                        mark = "0"+mark;
                    }

                    String line = "2" + stuId + stuNo.substring(2) + "0" + centreNo.substring(6) + centreNo + 
                                "0" + courseCode + "1" + moduleCode + "1" + "02" + mark + "EA"; 
                    Functions.writeLine(line, heading);
                });

                String num = count+"";
                for(int i = num.length();i<6;i++){
                    num = "0"+num;
                }        
                String myStrF = "9"+ heading + num + appendWith(centreName, 20," ")+ centreNo + provinceNo + dateCreated + examDate;
                Functions.writeLine(myStrF, heading);
                alert.notify("Files saved to Desktop.", 1);
            }catch(Exception ex){
                Functions.warningMessage("There is no data for the selected term.");
            }
        }else{
            Functions.errorMessage("Department and Term must be selected.");
        }
    }//GEN-LAST:event_btnGenerateMarkEntryActionPerformed

    private void btnGenerateExamEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateExamEntryActionPerformed
        // TODO add your handling code here:
        if(selectedTerm != null && selectedDepartment != null){
            try{
                Functions.clearFile("mhk1"); 
                selectedDepartment = jcbDepartment.getSelectedItem().toString();
                Object objGrade = (Object)jcbTerm.getSelectedItem();
                selectedTerm = (Term)objGrade;

                String centreNo = Functions.getCentreNo();
                String centreName = Functions.getCentreName();
                String [] value = selectedTerm.getTerm().split("-");
                String examDate = value[0]+value[1];
                String fileName = centreNo.substring(6);
                String provinceNo = "08";
                String provinceName = "PRETORIA";

                DateFormat df = new SimpleDateFormat("yyyyMMdd");
                Date date = new Date();
                String dateCreated = df.format(date);

                String d = selectedDepartment.equalsIgnoreCase("Management")?
                            "H":"T";
                String heading = centreNo.substring(6) + d + "29E.TXT";
                delAll(heading);     
                String myStrH = "1" + heading + appendWith(centreName,30," ") + centreNo + appendWith(provinceName,40," ") + provinceNo + dateCreated + examDate + "0204";
                myStrH = appendWith(myStrH, 426, " ");
                writeH(myStrH,"mhk1");

                List<HashMap<String,Object>> list = entryBoImpl.GetExamEntry(selectedTerm.getTermId(), 1);
                int count = list.size();

                String recType = "20";
                String char10 = "05";
                String beforeLanguage = "4";
                String afterGender = "00000";

                String oldStr = "";
                String newStr = "";
                int x = 0, y = 0;

                for(HashMap<String,Object> row:list){

                    String attendance = row.get("studytype").toString().equalsIgnoreCase("Full-time")?
                                        "1":"2";

                    String stuLanguage = row.get("language").toString();

                    String language =  stuLanguage.equalsIgnoreCase("English")?
                                        "E":"A";
                    String race = row.get("race").toString().substring(0,1).toUpperCase();
                    String gender = row.get("gender").toString().substring(0,1).toUpperCase();
                    String lastName = row.get("lastName").toString();
                    String firstName = row.get("firstName").toString();
                    String otherName = row.get("otherName").toString();
                    String stuId = row.get("idno").toString();
                    String stuNo = row.get("personId").toString().substring(2)+centreNo.substring(6);
                    String courseCode = row.get("courseCode").toString();
                    String moduleCode = "1"+row.get("moduleCode").toString()+"1";
                    String dob = row.get("moduleCode").toString().replace("-", "");

                    String line = "2" + stuId + stuNo.substring(2) + "0" + centreNo.substring(6) + centreNo + 
                                "0" + courseCode + "1" + moduleCode + "1" + "02" + "EA"; 

                    String str = courseCode +","+ stuNo;
                    oldStr = str;
                    if(!newStr.equalsIgnoreCase(oldStr)){
                        newStr = oldStr;
                         String strToWrite = recType.concat(courseCode)
                                    .concat(char10)
                                    .concat(appendWith(lastName, 30, " "))
                                    .concat(appendWith(firstName, 30, " "))
                                    .concat(appendWith(otherName, 30, " "))
                                    .concat(beforeLanguage)
                                    .concat(language)
                                    .concat(stuId)
                                    .concat(dob)
                                    .concat(stuNo.substring(2))
                                    .concat("0")
                                    .concat(centreNo.substring(6))
                                    .concat(gender)
                                    .concat(afterGender)
                                    .concat(attendance)
                                    .concat(race)
                                    .concat(appendWith("", 49, " "))
                                    .concat(moduleCode)
                                    .concat(attendance);
                        if(x != 0){
                            writeL(strToWrite, "mhk1");
                        }else{
                            write(strToWrite, "mhk1");
                        }
                        y++;
                    }
                    else{
                        write(language + moduleCode + attendance, "mhk1");                    
                    }
                    x++;
                }

                String num = y+"";
                for(int i = num.length();i<6;i++){
                    num = "0" + num;
                }        

                String myStrF = "9" + heading + appendWith(centreName,30," ") + centreNo + appendWith(provinceName,40," ") + provinceNo + dateCreated + examDate + num;
                myStrF = appendWith(myStrF, 426, " ");
                writeL(myStrF, "mhk1");
                delAll(heading.replaceAll(" ", ""));
                addZ("mhk1", heading.replaceAll(" ", ""));
                alert.notify("Files saved to Desktop.", 1);
            }catch(Exception ex){
                Functions.warningMessage("There is no data for the selected term.");
            }
        }else{
            Functions.errorMessage("Department and Term must be selected.");
        }
    }//GEN-LAST:event_btnGenerateExamEntryActionPerformed
    
    public String appendWith(String str, int len,String with){
        int x = str.length();
        int y = len - x;
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<y;i++){
            sb.append(with);
        }
        return str+sb.toString();
    }
    
    public void writeL(String line, String filename){
        try{
            BufferedWriter bw = new BufferedWriter(new FileWriter(pathToDesktop+filename+".txt",true));            
            bw.newLine();
            bw.write(line);
            bw.close();
        }catch(IOException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    
    
    public void write(String line, String filename){
        try{
            BufferedWriter bw = new BufferedWriter(new FileWriter(pathToDesktop+filename+".txt",true));
            bw.write(line);
            bw.close();
        }catch(IOException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    public void addZ(String filename, String fln){
        try{
            FileReader fr = new FileReader(pathToDesktop+filename+".txt");
            InputStreamReader isr = fr;
            BufferedReader br = new BufferedReader(isr);
            String line = br.readLine();
            
            StringTokenizer str; 
            
            while(line != null){
                str = new StringTokenizer(line,"");
                String format = "";
                int counter = 0;
                while(str.hasMoreTokens()){
                    String token = str.nextToken();
                    counter++;                    
                    format += token;
                }
                format = appendWith(format, 426, "0");
                writeH(format, fln);
                line = br.readLine();
            }
            br.close();
        }catch(IOException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    
    public void writeH(String line, String filename){
        try{
            BufferedWriter bw = new BufferedWriter(new FileWriter(pathToDesktop+filename+".txt",true)); 
            bw.write(line);           
            bw.newLine();
            bw.close();
        }catch(IOException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    public void delAll(String filename){
        try{
            PrintWriter pw = new PrintWriter(pathToDesktop+filename+".txt");
            pw.close();
        }catch(FileNotFoundException e){
            System.out.println(e.getLocalizedMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        Functions.setFormTheme();
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EntryFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.molorane.college.view.Controls.Alert alert;
    private javax.swing.JPanel btnExamEntry;
    private javax.swing.JButton btnGenerateExamEntry;
    private javax.swing.JButton btnGenerateMarkEntry;
    private javax.swing.JPanel btnMarkEntry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> jcbDepartment;
    private javax.swing.JComboBox<String> jcbTerm;
    private javax.swing.JPanel jpnControls;
    private javax.swing.JPanel jpnExamEntry;
    private javax.swing.JPanel jpnMarkEntry;
    private javax.swing.JPanel jpnProgress;
    private javax.swing.JPanel jpnSideMenu;
    private com.molorane.college.custom.JPanelSliding jpnSlider;
    private javax.swing.JLabel lblProgress;
    private com.molorane.college.view.Controls.TitlePnl title;
    // End of variables declaration//GEN-END:variables
}
